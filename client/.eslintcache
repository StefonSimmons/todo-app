[{"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/App.js":"1","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/AddTodo.jsx":"2","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/TodoList.jsx":"3","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/User.jsx":"4","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/Login.jsx":"5","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/services/index.js":"6","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/services/apiConfig.js":"7","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/EditForm.jsx":"8"},{"size":3933,"mtime":1607664931819,"results":"9","hashOfConfig":"10"},{"size":1399,"mtime":1607664179660,"results":"11","hashOfConfig":"10"},{"size":1530,"mtime":1607664528029,"results":"12","hashOfConfig":"10"},{"size":776,"mtime":1607664658809,"results":"13","hashOfConfig":"10"},{"size":1237,"mtime":1607664691271,"results":"14","hashOfConfig":"10"},{"size":316,"mtime":1607649044311,"results":"15","hashOfConfig":"10"},{"size":279,"mtime":1607649289086,"results":"16","hashOfConfig":"10"},{"size":1070,"mtime":1607597824869,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"fiqpm8",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/App.js",["36"],"import { useEffect, useState } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport axios from 'axios'\n\nimport { todoBaseURL, usersBaseURL, config } from './services/index'\nimport { api } from './services/apiConfig'\n\nimport { gifs } from './data/gifImages'\n\nimport './App.css'\n\nimport TodoList from './components/TodoList'\nimport TodoDetails from './components/TodoDetails'\nimport AddTodo from './components/AddTodo'\nimport User from './components/User'\n\n\nfunction App() {\n\n  const [gif, setGif] = useState('')\n  const [todos, updateTodos] = useState([])\n  const [refresh, triggerRefresh] = useState(false)\n  const [registrationCred, setRegCred] = useState({\n    email: '',\n    username: '',\n    password: ''\n  })\n  const [currentUser, setCurrUser] = useState({})\n\n  // GET REQUEST\n  const getToDoData = async () => {\n    const email = currentUser.fields && currentUser.fields.email\n    const res = await axios.get(`${todoBaseURL}?filterByFormula=FIND(%22${email}%22%2C+%7Bemail%7D)`, config)\n    updateTodos(res.data.records)\n    console.log(res)\n  }\n\n  // POST REQUEST - Todo\n  const postToDoData = async (formData) => {\n    await axios.post(todoBaseURL, { fields: formData }, config)\n  }\n\n  // DELETE REQUEST \n  const deleteToDoItem = async (itemID) => {\n    await axios.delete(`${todoBaseURL}/${itemID}`, config)\n  }\n\n  // PUT REQUEST\n  const updateToDoItem = async (itemID, fields) => {\n    await axios.put(`${todoBaseURL}/${itemID}`, { fields }, config)\n  }\n\n  // POST REQUEST - Password Digest & \n  // POST REQUEST - User Registration\n  const register = async () => {\n    const res = await api.post('/users', { registrationCred })\n    const password_digest = res.data\n    const fields = {\n      email: registrationCred.email,\n      username: registrationCred.username,\n      password: password_digest\n    }\n    await axios.post(usersBaseURL, { fields }, config)\n  }\n\n  // GET REQUEST - Find One User &\n  // POST REQUEST - User Login\n  const login = async (loginCred) => {\n    const email = loginCred.email\n    const res = await axios.get(`${usersBaseURL}?filterByFormula=FIND(%22${email}%22%2C+%7Bemail%7D)`, config)\n    const password_digest = res.data.records[0].fields.password\n    const loginAuth = {\n      email: loginCred.email,\n      password: loginCred.password,\n      password_digest\n    }\n    const authorized = await api.post('/sign-in', { loginAuth })\n    const user = res.data.records[0]\n    if (authorized.data.user) setCurrUser(user)\n  }\n\n  useEffect(() => {\n    getToDoData()\n    console.log('heeeerre')\n  }, [refresh])\n\n\n  return (\n    <div>\n      <nav className=\"nav-container\">\n        <Link to='/'>List</Link>\n        <Link to=\"/add-todo\">New Item</Link>\n        <Link to=\"/register-login\">Register / Login</Link>\n        {currentUser.fields && <h1>{currentUser.fields.username}</h1>}\n      </nav>\n      {console.log(todos)}\n      <Route exact path=\"/\">\n        <TodoList\n          currentUser={currentUser}\n          todos={todos}\n          deleteToDoItem={deleteToDoItem}\n          triggerRefresh={triggerRefresh}\n          refresh={refresh}\n          gif={gif}\n          setGif={setGif}\n          gifs={gifs}\n        />\n      </Route>\n\n      <Route path=\"/items/:itemID\">\n        <TodoDetails\n          todos={todos}\n          updateToDoItem={updateToDoItem}\n          triggerRefresh={triggerRefresh}\n          refresh={refresh}\n        />\n      </Route>\n\n      <Route path=\"/add-todo\">\n        <AddTodo\n          currentUser={currentUser}\n          postToDoData={postToDoData}\n          triggerRefresh={triggerRefresh}\n          refresh={refresh}\n        />\n      </Route>\n\n      <Route path=\"/register-login\">\n        <User\n          login={login}\n          register={register}\n          formData={registrationCred}\n          setFormData={setRegCred}\n          triggerRefresh={triggerRefresh}\n          refresh={refresh}\n        />\n      </Route>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/AddTodo.jsx",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/TodoList.jsx",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/User.jsx",[],["37","38"],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/Login.jsx",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/services/index.js",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/services/apiConfig.js",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/EditForm.jsx",["39"],{"ruleId":"40","severity":1,"message":"41","line":85,"column":6,"nodeType":"42","endLine":85,"endColumn":15,"suggestions":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"40","severity":1,"message":"48","line":14,"column":6,"nodeType":"42","endLine":14,"endColumn":8,"suggestions":"49"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToDoData'. Either include it or remove the dependency array.","ArrayExpression",["50"],"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"React Hook useEffect has a missing dependency: 'props.todoItem'. Either include it or remove the dependency array.",["53"],{"desc":"54","fix":"55"},"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [getToDoData, refresh]",{"range":"58","text":"59"},"Update the dependencies array to be: [props.todoItem]",{"range":"60","text":"61"},[2546,2555],"[getToDoData, refresh]",[320,322],"[props.todoItem]"]