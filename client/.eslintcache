[{"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/Register.jsx":"1","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/App.js":"2","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/AddTodo.jsx":"3","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/EditForm.jsx":"4","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/TodoDetails.jsx":"5","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/Login.jsx":"6","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/data/gifImages.js":"7","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/DeleteModal.jsx":"8","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/services/apiConfig.js":"9","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/TodoList.jsx":"10"},{"size":1348,"mtime":1607703780508,"results":"11","hashOfConfig":"12"},{"size":4875,"mtime":1607711671713,"results":"13","hashOfConfig":"12"},{"size":1356,"mtime":1607703547474,"results":"14","hashOfConfig":"12"},{"size":1109,"mtime":1607696229173,"results":"15","hashOfConfig":"12"},{"size":1483,"mtime":1607696215130,"results":"16","hashOfConfig":"12"},{"size":1109,"mtime":1607695438327,"results":"17","hashOfConfig":"12"},{"size":517,"mtime":1607637623074,"results":"18","hashOfConfig":"12"},{"size":902,"mtime":1607637737073,"results":"19","hashOfConfig":"12"},{"size":279,"mtime":1607649289086,"results":"20","hashOfConfig":"12"},{"size":1530,"mtime":1607664528029,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"fiqpm8",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/Register.jsx",["46"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport \"./Register.css\"\n\nexport default function Register({ register, formData, setFormData }) {\n\n  const history = useHistory()\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setFormData({\n      ...formData,\n      [name]: value\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    register()\n    setFormData({\n      email: '',\n      username: '',\n      password: ''\n    })\n  }\n  return (\n\n    <form className=\"register-form\" onSubmit={(e) => handleSubmit(e)}>\n      <h1 className=\"register-title\">Register</h1>\n      <input\n        className=\"register-input\"\n        type=\"text\"\n        name=\"email\"\n        value={formData.email}\n        onChange={(e) => handleChange(e)}\n        placeholder=\"email\"\n      />\n      <input\n        className=\"register-input\"\n        type=\"text\"\n        name=\"username\"\n        value={formData.username}\n        onChange={(e) => handleChange(e)}\n        placeholder=\"username\"\n      />\n      <input\n        className=\"register-input password\"\n        type=\"password\"\n        name=\"password\"\n        value={formData.password}\n        onChange={(e) => handleChange(e)}\n        placeholder=\"password\"\n      />\n      <input className=\"register-btn\" type=\"submit\" value=\"Register\" />\n    </form>\n  )\n}\n",["47","48"],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/App.js",["49","50"],"import { useEffect, useState } from 'react'\nimport { Route, Link, useHistory } from 'react-router-dom'\nimport axios from 'axios'\n\nimport { todoBaseURL, usersBaseURL, config } from './services/index'\nimport { api } from './services/apiConfig'\n\nimport { gifs } from './data/gifImages'\n\nimport './App.css'\n\nimport TodoList from './components/TodoList'\nimport TodoDetails from './components/TodoDetails'\nimport AddTodo from './components/AddTodo'\nimport User from './components/User'\n\n\nfunction App() {\n\n  const [gif, setGif] = useState('')\n  const [todos, updateTodos] = useState([])\n  const [refresh, triggerRefresh] = useState(false)\n  const [registrationCred, setRegCred] = useState({\n    email: '',\n    username: '',\n    password: ''\n  })\n  const [currentUser, setCurrUser] = useState({})\n  const history = useHistory()\n\n  // GET REQUEST\n  const getToDoData = async () => {\n    console.log('2: ', currentUser)\n    const email = currentUser.fields && currentUser.fields.email\n    console.log('2b: ', email)\n    const res = await axios.get(`${todoBaseURL}?filterByFormula=FIND(%22${email}%22%2C+%7Bemail%7D)`, config)\n    updateTodos(res.data.records)\n    console.log('2c: ', res)\n  }\n\n  // POST REQUEST - Todo\n  const postToDoData = async (formData) => {\n    console.log(formData)\n    await axios.post(todoBaseURL, { fields: formData }, config)\n    triggerRefresh(!refresh)\n  }\n\n  // DELETE REQUEST \n  const deleteToDoItem = async (itemID) => {\n    await axios.delete(`${todoBaseURL}/${itemID}`, config)\n  }\n\n  // PUT REQUEST\n  const updateToDoItem = async (itemID, fields) => {\n    await axios.put(`${todoBaseURL}/${itemID}`, { fields }, config)\n\n  }\n\n  // POST REQUEST - Password Digest & \n  // POST REQUEST - User Registration\n  const register = async () => {\n    const res = await api.post('/users', { registrationCred })\n    const password_digest = res.data.password_digest\n    localStorage.setItem('token', res.data.token)\n\n    const fields = {\n      email: registrationCred.email,\n      username: registrationCred.username,\n      password: password_digest\n    }\n    const resp = await axios.post(usersBaseURL, { fields }, config)\n\n    setCurrUser(resp.data)\n    triggerRefresh(!refresh)\n    history.push('/add-todo')\n  }\n\n  // GET REQUEST - Find One User &\n  // POST REQUEST - User Login\n  const login = async (loginCred) => {\n    const email = loginCred.email\n    const res = await axios.get(`${usersBaseURL}?filterByFormula=FIND(%22${email}%22%2C+%7Bemail%7D)`, config)\n    const password_digest = res.data.records[0].fields.password\n    const loginAuth = {\n      email: loginCred.email,\n      password: loginCred.password,\n      password_digest\n    }\n    const authorized = await api.post('/sign-in', { loginAuth })\n    const user = res.data.records[0]\n    if (authorized.data.user) {\n      setCurrUser(user)\n      triggerRefresh(!refresh)\n      history.push('/')\n    }\n  }\n\n  // GET REQUEST - Verify User (Auth)\n  const verifyUser = async () => {\n    const token = localStorage.getItem('token')\n\n    if (token) {\n      const header = {\n        headers: { 'Authorization': `Bearer ${token}` }\n      }\n      const res = await api.get('/verify', header)\n      const email = res.data\n      const resp = await axios.get(`${usersBaseURL}?filterByFormula=FIND(%22${email}%22%2C+%7Bemail%7D)`, config)\n      const user = resp.data.records[0]\n      setCurrUser(user)\n      triggerRefresh(!refresh)\n    }\n  }\n\n  useEffect(() => {\n    getToDoData()\n  }, [refresh])\n\n\n  useEffect(() => {\n    verifyUser()\n  }, [])\n\n  return (\n    <div>\n      <nav className=\"nav-container\">\n        <Link to='/'>List</Link>\n        <Link to=\"/add-todo\">New Item</Link>\n        {currentUser.fields ?\n          <>\n            <Link to=\"/register-login\">Logout</Link>\n            <h1>Hi, {currentUser.fields.username}</h1>\n          </>\n          :\n          <Link to=\"/register-login\">Register / Login</Link>\n        }\n      </nav>\n      <Route exact path=\"/\">\n        <TodoList\n          currentUser={currentUser}\n          todos={todos}\n          deleteToDoItem={deleteToDoItem}\n          triggerRefresh={triggerRefresh}\n          refresh={refresh}\n          gif={gif}\n          setGif={setGif}\n          gifs={gifs}\n        />\n      </Route>\n\n      <Route path=\"/items/:itemID\">\n        <TodoDetails\n          currentUser={currentUser}\n          todos={todos}\n          updateToDoItem={updateToDoItem}\n          triggerRefresh={triggerRefresh}\n          refresh={refresh}\n        />\n      </Route>\n\n      <Route path=\"/add-todo\">\n        <AddTodo\n          currentUser={currentUser}\n          postToDoData={postToDoData}\n        />\n      </Route>\n\n      <Route path=\"/register-login\">\n        <User\n          login={login}\n          register={register}\n          formData={registrationCred}\n          setFormData={setRegCred}\n        />\n      </Route>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/AddTodo.jsx",["51"],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/EditForm.jsx",["52"],"import React, { useEffect, useState } from 'react'\n\nexport default function EditForm(props) {\n\n  const [fields, setFields] = useState({})\n\n  useEffect(() => {\n    if (props.todoItem) {\n      setFields({\n        name: props.todoItem.fields.name,\n        description: props.todoItem.fields.description,\n        email: [props.currentUser.id]\n      })\n    }\n  }, [])\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    e.preventDefault()\n    setFields({\n      ...fields,\n      [name]: value\n    })\n  }\n\n\n  return (\n    <form onSubmit={() => {\n      props.updateToDoItem(props.itemID, fields)\n      props.showEditForm(false)\n      props.triggerRefresh(!props.refresh)\n    }\n    }>\n      <input\n        className=\"todo-details-name\"\n        name=\"name\"\n        value={fields.name}\n        onChange={(e) => handleChange(e)}\n      />\n      <h5>Description:</h5>\n      <input\n        className=\"todo-details-description\"\n        name=\"description\"\n        value={fields.description}\n        onChange={(e) => handleChange(e)}\n      />\n      <input type=\"submit\" value=\"submit\"/>\n    </form>\n  )\n}\n","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/TodoDetails.jsx",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/Login.jsx",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/data/gifImages.js",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/DeleteModal.jsx",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/services/apiConfig.js",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/TodoList.jsx",[],{"ruleId":"53","severity":1,"message":"54","line":8,"column":9,"nodeType":"55","messageId":"56","endLine":8,"endColumn":16},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":117,"column":6,"nodeType":"63","endLine":117,"endColumn":15,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":122,"column":6,"nodeType":"63","endLine":122,"endColumn":8,"suggestions":"66"},{"ruleId":"53","severity":1,"message":"67","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"68","line":15,"column":6,"nodeType":"63","endLine":15,"endColumn":8,"suggestions":"69"},"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToDoData'. Either include it or remove the dependency array.","ArrayExpression",["72"],"React Hook useEffect has a missing dependency: 'verifyUser'. Either include it or remove the dependency array.",["73"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'props.currentUser.id' and 'props.todoItem'. Either include them or remove the dependency array. If 'setFields' needs the current value of 'props.currentUser.id', you can also switch to useReducer instead of useState and read 'props.currentUser.id' in the reducer.",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [getToDoData, refresh]",{"range":"81","text":"82"},"Update the dependencies array to be: [verifyUser]",{"range":"83","text":"84"},"Update the dependencies array to be: [props.currentUser.id, props.todoItem]",{"range":"85","text":"86"},[3454,3463],"[getToDoData, refresh]",[3509,3511],"[verifyUser]",[359,361],"[props.currentUser.id, props.todoItem]"]