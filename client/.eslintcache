[{"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/Register.jsx":"1","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/App.js":"2","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/AddTodo.jsx":"3","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/EditForm.jsx":"4","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/TodoDetails.jsx":"5","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/Login.jsx":"6","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/data/gifImages.js":"7","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/DeleteModal.jsx":"8","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/services/apiConfig.js":"9","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/TodoList.jsx":"10","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/User.jsx":"11"},{"size":1348,"mtime":1607703780508,"results":"12","hashOfConfig":"13"},{"size":5205,"mtime":1607714274546,"results":"14","hashOfConfig":"13"},{"size":1356,"mtime":1607703547474,"results":"15","hashOfConfig":"13"},{"size":1109,"mtime":1607696229173,"results":"16","hashOfConfig":"13"},{"size":1483,"mtime":1607696215130,"results":"17","hashOfConfig":"13"},{"size":1109,"mtime":1607695438327,"results":"18","hashOfConfig":"13"},{"size":517,"mtime":1607637623074,"results":"19","hashOfConfig":"13"},{"size":902,"mtime":1607637737073,"results":"20","hashOfConfig":"13"},{"size":279,"mtime":1607649289086,"results":"21","hashOfConfig":"13"},{"size":1530,"mtime":1607664528029,"results":"22","hashOfConfig":"13"},{"size":680,"mtime":1607695631006,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"fiqpm8",{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/Register.jsx",["49"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport \"./Register.css\"\n\nexport default function Register({ register, formData, setFormData }) {\n\n  const history = useHistory()\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setFormData({\n      ...formData,\n      [name]: value\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    register()\n    setFormData({\n      email: '',\n      username: '',\n      password: ''\n    })\n  }\n  return (\n\n    <form className=\"register-form\" onSubmit={(e) => handleSubmit(e)}>\n      <h1 className=\"register-title\">Register</h1>\n      <input\n        className=\"register-input\"\n        type=\"text\"\n        name=\"email\"\n        value={formData.email}\n        onChange={(e) => handleChange(e)}\n        placeholder=\"email\"\n      />\n      <input\n        className=\"register-input\"\n        type=\"text\"\n        name=\"username\"\n        value={formData.username}\n        onChange={(e) => handleChange(e)}\n        placeholder=\"username\"\n      />\n      <input\n        className=\"register-input password\"\n        type=\"password\"\n        name=\"password\"\n        value={formData.password}\n        onChange={(e) => handleChange(e)}\n        placeholder=\"password\"\n      />\n      <input className=\"register-btn\" type=\"submit\" value=\"Register\" />\n    </form>\n  )\n}\n",["50","51"],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/App.js",["52","53"],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/AddTodo.jsx",["54"],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/EditForm.jsx",["55"],"import React, { useEffect, useState } from 'react'\n\nexport default function EditForm(props) {\n\n  const [fields, setFields] = useState({})\n\n  useEffect(() => {\n    if (props.todoItem) {\n      setFields({\n        name: props.todoItem.fields.name,\n        description: props.todoItem.fields.description,\n        email: [props.currentUser.id]\n      })\n    }\n  }, [])\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    e.preventDefault()\n    setFields({\n      ...fields,\n      [name]: value\n    })\n  }\n\n\n  return (\n    <form onSubmit={() => {\n      props.updateToDoItem(props.itemID, fields)\n      props.showEditForm(false)\n      props.triggerRefresh(!props.refresh)\n    }\n    }>\n      <input\n        className=\"todo-details-name\"\n        name=\"name\"\n        value={fields.name}\n        onChange={(e) => handleChange(e)}\n      />\n      <h5>Description:</h5>\n      <input\n        className=\"todo-details-description\"\n        name=\"description\"\n        value={fields.description}\n        onChange={(e) => handleChange(e)}\n      />\n      <input type=\"submit\" value=\"submit\"/>\n    </form>\n  )\n}\n","/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/TodoDetails.jsx",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/Login.jsx",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/data/gifImages.js",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/DeleteModal.jsx",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/services/apiConfig.js",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/TodoList.jsx",[],"/Users/stefonsimmons/general_assembly/SEI/Garnet/todo_app/client/src/components/User.jsx",[],{"ruleId":"56","severity":1,"message":"57","line":8,"column":9,"nodeType":"58","messageId":"59","endLine":8,"endColumn":16},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":135,"column":6,"nodeType":"66","endLine":135,"endColumn":15,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":140,"column":6,"nodeType":"66","endLine":140,"endColumn":8,"suggestions":"69"},{"ruleId":"56","severity":1,"message":"70","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},{"ruleId":"64","severity":1,"message":"71","line":15,"column":6,"nodeType":"66","endLine":15,"endColumn":8,"suggestions":"72"},"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToDoData'. Either include it or remove the dependency array.","ArrayExpression",["75"],"React Hook useEffect has a missing dependency: 'verifyUser'. Either include it or remove the dependency array.",["76"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'props.currentUser.id' and 'props.todoItem'. Either include them or remove the dependency array. If 'setFields' needs the current value of 'props.currentUser.id', you can also switch to useReducer instead of useState and read 'props.currentUser.id' in the reducer.",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [getToDoData, refresh]",{"range":"84","text":"85"},"Update the dependencies array to be: [verifyUser]",{"range":"86","text":"87"},"Update the dependencies array to be: [props.currentUser.id, props.todoItem]",{"range":"88","text":"89"},[3767,3776],"[getToDoData, refresh]",[3822,3824],"[verifyUser]",[359,361],"[props.currentUser.id, props.todoItem]"]